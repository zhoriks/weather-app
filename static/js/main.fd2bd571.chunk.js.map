{"version":3,"sources":["redux/reducers/form.js","redux/reducers/index.js","redux/store.js","components/Information/Information.jsx","components/Helper/Helper.jsx","components/Error/Error.jsx","components/Form/Form.jsx","container/FormContainer.jsx","constants/index.js","redux/action/action.js","App.js","serviceWorker.js","index.js"],"names":["form","state","action","type","isLoaded","payload","recommendation","result","value","error","combineReducers","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","Information","props","className","city","weather","temp","humidity","wind","Helper","clothes","Error","onClick","handleReset","Form","onSubmit","handleSubmit","onChange","handleChange","placeholder","name","description","main","speed","FormContainer","bind","event","this","setChange","target","length","loadInformation","setError","preventDefault","fetch","response","json","getRecommendation","setRecommendation","clothesRecommendation","React","connect","dispatch","submitValue","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fd2bd571.chunk.js","sourcesContent":["const form = (state={}, action) => {\n  switch (action.type) {\n    case 'LOAD_INFORMATION':\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded,\n        recommendation: action.payload.recommendation,\n        result: action.payload.result\n      };\n    case 'SET_RECOMMENDATION':\n      return {\n        ...state,\n        recommendation: action.payload\n      };\n    case 'SET_CHANGE':\n      return {\n        ...state,\n        value: action.payload.value\n      };\n    case 'SUBMIT__VALUE':\n      return {\n        ...state,\n        value: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload.error\n      };\n    default:\n      return state\n  }\n}\n\nexport default form","import { combineReducers } from 'redux'\nimport form from './form'\n\nexport default combineReducers({\n    form\n})\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst initialState = {\n  form: {\n    isLoaded: false,\n    recommendation: '',\n    value: ''\n  }\n}\n\nexport const store = createStore(\n    reducer,\n    initialState,\n    // для просмотре с помощью расширения chrome надо добавить следующую строку (https://github.com/zalmoxisus/redux-devtools-extension#usage)\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import * as React from 'react'\nimport './information.css';\n\nfunction Information(props) {\n    return (\n        <section className=\"information\">\n        <div className=\"information__text\">Погода в городе: {props.city}</div>\n        <div className=\"information__text\">За окном: {props.weather}</div>\n        <div className=\"information__text\">Температура: {props.temp}&deg;</div>\n        <div className=\"information__text\">Влажность: {props.humidity}%</div>    \n        <div className=\"information__text\">Ветер: {props.wind} м/с</div>\n        </section>\n    );\n}\n\nexport default Information;","import * as React from 'react'\nimport './helper.css';\n\nfunction Helper(props) {\n    return (\n        <div className=\"helper\">{props.clothes}</div>\n    );\n}\n\nexport default Helper;","import * as React from 'react'\nimport './error.css';\n\nfunction Error(props) {\n    return (\n        <div className=\"error\">\n        <div className=\"error__text\">Такой город отыскать не удалось :(</div>\n        <button className=\"error__button\" onClick={props.handleReset}>Еще</button>\n      </div>\n    );\n}\n\nexport default Error;\n","import * as React from 'react'\nimport './form.css';\nimport Information from '../Information/Information'\nimport Helper from '../Helper/Helper'\nimport Error from '../Error/Error' \n\n\nfunction Form (props) {\n    if (props.error) {\n        return (\n          <Error handleReset={props.handleReset}/>\n        )\n      }\n    return (\n      <main className=\"content\">\n        <form className=\"form\" onSubmit={props.handleSubmit}>\n          <div className=\"form__text\">Где вы хотите узнать погоду?</div>\n\n          <input className=\"form__input\" type=\"text\" value={props.value} onChange={props.handleChange} placeholder=\" Город\"/>\n\n          <input className=\"form__button\" type=\"submit\" value=\"Узнать\" />\n        </form>\n        {props.isLoaded && <Information \n          city={props.result.name}\n          weather={props.result.weather[0].description}\n          temp={props.result.main.temp}\n          humidity={props.result.main.humidity}\n          wind={props.result.wind.speed}\n        />}\n  \n        {props.isLoaded && <Helper clothes={props.recommendation}/>}\n\n      </main>\n    );\n}\n\nexport default Form","import * as React from 'react'\nimport Form from '../components/Form/Form'\nimport { connect } from 'react-redux'\nimport { GET_URL } from '../constants/index'\nimport { loadInformation, setRecommendation, setChange, submitValue, setError  } from '../redux/action/action'\n\nconst mapStateToProps = state => ({\n  isLoaded: state.form.isLoaded,\n  result: state.form.result,\n  recommendation: state.form.recommendation,\n  weather: state.form.weather,\n  value: state.form.value,\n  error: state.form.error,\n});\nconst mapDispatchToProps = dispatch => ({\n  loadInformation: payload => dispatch(loadInformation(payload)),\n  setRecommendation: payload => dispatch(setRecommendation(payload)),\n  setChange: payload => dispatch(setChange(payload)),\n  submitValue: payload => dispatch(submitValue(payload)),\n  setError: payload => dispatch(setError(payload)),\n});\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.setChange({ value: event.target.value })\n    if ((event.target.value.length) || (event.target.value.length === 0)) {\n      this.props.loadInformation({ recommendation: '' })\n    }\n}\n\n  handleReset(event) {\n    this.props.setError({ error: '' });\n  }\n\n  async handleSubmit(event) {\n    \n    event.preventDefault();\n    try {\n      const response = await fetch(GET_URL(this.props.value))\n      const result = await response.json()\n      const recommendation = this.getRecommendation(result)\n      this.props.setRecommendation(recommendation)\n      this.props.loadInformation({ isLoaded: true, recommendation, result })\n    } catch (err) {\n        this.props.setError({ error: err });\n    }\n  };\n\n  getRecommendation(result) {\n    let clothesRecommendation = ''\n\n    if ((result.weather === \"дождь\" || result.weather === \"небольшой дождь\") && (result.temp >= 18)) {\n      clothesRecommendation = \"На улице тепло, но возьмите зонт\"\n    }\n    else if ((result.main.temp >= 18)) {\n      clothesRecommendation = \"На улице тепло :)\"\n    }\n    else if (result.weather === (\"дождь\" || \"небольшой дождь\")) {\n      clothesRecommendation = \"Возьмите зонт\"\n    }\n    else if (((result.main.temp <= 17) && (result.main.temp >= 0))) {\n      clothesRecommendation = \"На улице прохладно, утеплитесь\"\n    }\n    else if (result.main.temp < 0) {\n      clothesRecommendation = \"На улице холодно! Оденьтесь тепло!\"\n    }\n    else if (result.main.temp < -30) {\n      clothesRecommendation = \"На улице очень холодно! Останьтесь дома!\"\n    }\n    return clothesRecommendation\n  };\n  render() {\n    return <Form \n      handleSubmit={this.handleSubmit} \n      handleChange={this.handleChange}\n      handleReset={this.handleReset}\n      isLoaded={this.props.isLoaded}\n      result={this.props.result}\n      recommendation={this.props.recommendation}\n      error={this.props.error}\n    />\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);","export function GET_URL(city) {\n    return `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=9190638005eccb8c3ab7c13acd670d43&lang=ru&units=metric`\n}","export function loadInformation(payload) {\n  return {type: \"LOAD_INFORMATION\", payload}\n}\n\nexport function setRecommendation(payload) {\n  return {type: \"SET_RECOMMENDATION\", payload}\n}\n\nexport function setChange(payload) {\n  return {type: \"SET_CHANGE\", payload}\n}\n\nexport function submitValue(payload) {\n  return {type: \"SUBMIT_VALUE\", payload}\n}\n\nexport function setError(payload) {\n  return {type: \"SET_ERROR\", payload}\n}","import * as React from 'react';\nimport FormContainer from'./container/FormContainer';\nimport './vendor/normalize.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <FormContainer />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}